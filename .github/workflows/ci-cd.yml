name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - service_dir: User_Service
            image_name: user-service
            dockerfile: User_Service/Dockerfile
          - service_dir: Shopping_Service
            image_name: shopping-service
            dockerfile: Shopping_Service/Dockerfile
          - service_dir: Home_Task_Service
            image_name: home-task-service
            dockerfile: Home_Task_Service/Dockerfile
    steps:
      - uses: actions/checkout@v2
      
      - name: Debug - Print Working Directory
        run: |
          pwd
          ls -la
          echo "Current directory structure:"
          tree -a
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: pereira6
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
          
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ${{ matrix.dockerfile }}
          push: true
          tags: pereira6/${{ matrix.image_name }}:latest

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up kubectl
        uses: azure/setup-kubectl@v1
      
      - name: Set up Minikube
        uses: medyagh/setup-minikube@master
      
      - name: Deploy to Minikube
        run: |
          minikube start
          
          # Deploy databases first
          echo "Deploying databases..."
          kubectl apply -f kubernetes/user-service/postgres.yaml
          kubectl apply -f kubernetes/shopping-service/postgres.yaml
          kubectl apply -f kubernetes/home-task-service/postgres.yaml
          
          # Wait for databases to be ready
          echo "Waiting for databases to be ready..."
          kubectl wait --for=condition=ready pod -l app=postgres-user --timeout=180s
          kubectl wait --for=condition=ready pod -l app=postgres-shopping --timeout=180s
          kubectl wait --for=condition=ready pod -l app=postgres-hometask --timeout=180s
          
          # Deploy services
          echo "Deploying services..."
          kubectl apply -f kubernetes/user-service/deployment.yaml
          kubectl apply -f kubernetes/shopping-service/deployment.yaml
          kubectl apply -f kubernetes/home-task-service/deployment.yaml
          
          # Debug info
          echo "Showing pods status..."
          kubectl get pods
          
          # Wait for services with debug
          echo "Waiting for User Service..."
          kubectl wait --for=condition=ready pod -l app=user-service --timeout=180s || true
          kubectl describe pods -l app=user-service
          
          echo "Waiting for Shopping Service..."
          kubectl wait --for=condition=ready pod -l app=shopping-service --timeout=180s || true
          kubectl describe pods -l app=shopping-service
          
          echo "Waiting for Home Task Service..."
          kubectl wait --for=condition=ready pod -l app=home-task-service --timeout=180s || true
          kubectl describe pods -l app=home-task-service
          
          # Show final status
          echo "Final pod status:"
          kubectl get pods
          
          # Show logs of services if they exist
          echo "Service Logs:"
          kubectl logs -l app=user-service --tail=50 || true
          kubectl logs -l app=shopping-service --tail=50 || true
          kubectl logs -l app=home-task-service --tail=50 || true

      - name: Test Services
        if: always()
        run: |
          # Get Minikube IP
          MINIKUBE_IP=$(minikube ip)
          
          echo "Minikube IP: ${MINIKUBE_IP}"
          echo "All Services:"
          kubectl get services
          
          echo "All Pods:"
          kubectl get pods
