name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_IMAGE: user-service
  DOCKER_TAG: latest

jobs:
  test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./User_Service  # Define diretório padrão para todos os steps
    steps:
      - uses: actions/checkout@v2
      
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18'
          
      - name: Install dependencies
        run: npm ci
          
      - name: Run tests
        run: npm test

  build-and-push:
    needs: test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./User_Service
    steps:
      - uses: actions/checkout@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Build and push Docker image
        run: |
          docker-compose build api
          docker-compose push api

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./User_Service  # Define diretório padrão para todos os steps
    steps:
      - uses: actions/checkout@v2
      
      - name: Deploy to server
        run: |
          echo "Deploy step - configure according to your deployment strategy"
          # Aqui você pode adicionar os comandos para deploy
          # Por exemplo: ssh para servidor, kubectl apply, etc.
