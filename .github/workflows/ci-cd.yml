name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
  DOCKER_IMAGE: user-service
  DOCKER_TAG: latest

jobs:
  # test:
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./User_Service
  #   steps:
  #     - uses: actions/checkout@v2
      
  #     - name: Debug - Print Working Directory
  #       run: |
  #         pwd
  #         ls -la
  #         echo "Current directory structure:"
  #         tree -a
      
  #     - name: Set up Node.js
  #       uses: actions/setup-node@v2
  #       with:
  #         node-version: '18'
          
  #     - name: Install dependencies
  #       run: npm ci
          
  #     - name: Run tests
  #       run: npm test

  build-and-push:
    # needs: test    # Comentado pois o job de teste est√° comentado
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      
      - name: Debug - Print Working Directory
        run: |
          pwd
          ls -la
          echo "Docker directory contents:"
          ls -la User_Service/docker/
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
          
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: ./User_Service
          file: ./User_Service/docker/Dockerfile.api
          push: true
          tags: ${{ secrets.DOCKER_USERNAME }}/${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_TAG }}

  # deploy:
  #   needs: build-and-push
  #   runs-on: ubuntu-latest
  #   defaults:
  #     run:
  #       working-directory: ./User_Service
  #   steps:
  #     - uses: actions/checkout@v2
      
  #     - name: Deploy to server
  #       run: |
  #         echo "Deploy step - configure according to your deployment strategy"
